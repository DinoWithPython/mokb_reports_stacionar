"""Тесты основных файлов отчетов."""
import pandas as pd
import numpy as np

class TestBunk:
    filepath_xls = r"tests/files/койки 50.xlsx"
    filepath_xlsx = r"tests/files/1696599179_hosp_EvnSection_List_pg.xlsx" 
    
    def test_title_xls(self):
        title = [
            '№ п/п', 'Отделение', 'ФИО пациента', None, 'Дата рождения', 'Серия полиса',
            None, 'Номер полиса', 'Страховая компания', 'Номер истории болезни',
            'Номер палаты', 'Профиль коек', 'Врач', 'Код диагноза', 'Диагноз', 'КСГ',
            'Диета', 'Дата поступления', 'Дата выписки', 'Кол-во \nк/дней', 'Исход\nгоспитали\nзации']
        df = pd.read_excel(self.filepath_xls)
        title_from_excel = df.loc[[3]].replace({np.nan: None}).values.tolist()[0]
        assert title_from_excel == title, 'Заголовки в xls отличаются.'

    def test_title_xlsx(self):
        title = [
            '№ п/п', 'Отделение', 'ФИО пациента', 'Дата рождения', 'Серия полиса',
            'Номер полиса', 'Страховая компания', 'Номер истории болезни',
            'Номер палаты', 'Профиль коек', 'Врач', 'Код диагноза', 'Диагноз',
            'КСГ', 'Диета', 'Дата поступления', 'Дата выписки', 'Кол-во \nк/дней',
            'Исход\nгоспитали\nзации']
        df = pd.read_excel(self.filepath_xlsx)
        title_from_excel = df.loc[[3]].replace({np.nan: None}).values.tolist()[0]
        assert title_from_excel == title, 'Заголовки в xlsx отличаются.'


class TestOperation:
    filepath_xls = r"tests/files/Список пациентов по отделениям, с указанием реанимационных периодов и операций.xlsx"
    filepath_xlsx = r"tests/files/1696599371_pan_SectReanim_pg.xlsx" 
    
    def test_title_xls(self):
        title = [
            '№ п/п', 'ФИО пациента', None, 'Дата рождения', 'Возраст, лет', 'Пол',
            'Адрес проживания/ регистрации', 'Тип адреса проживания (село/ город)',
            '№ КВС', 'Тип госпитализации (планово/ экстренно)', 'Код отделения',
            'Наименова-\nние\nотделения', 'Профиль коек', 'Состояние\nпри поступ-\nлении в \nотделение',
            'Дата поступле-ния', 'Время поступле-ния', 'Код основного диагноза по МКБ 10',
            'Наименова-ние\nосновного\nдиагноза', 'Осложнения\nосновного\nдиагноза',
            'Сопутствующие\nдиагнозы', 'Общие услуги', 'Наличие осмотра в отделении',
            'Количество\nдневнико-вых\nзаписей\nв отделении', 'Исход\nгоспитали-зации',
            'Дата\nвыписки\n/перевода\n/смерти', 'Время\nвыписки\n/перевода\n/смерти',
            'Эпикриз', 'ФИО врача', 'Количество койко-дней ф. 066у',
            'Количество\nкойко-дней\nпо статис-\nтическим\nсуткам',
            'Наименова-\nние \nреанима-\nционной \nслужбы', 'Профиль коек',
            'Дневник поступле-ния', 'Дата начала реанима-ционного периода',
            'Время начала реанима-ционного периода', 'Количество\nдневнико-\nвых запи-\nсей в \nкарте',
            'Исход реанима-ции', None, 'Дата окончания реанима-ционного периода',
            'Время  окончания реанима-ционного периода', 'Эпикриз\n(перевод-\nной либо\nвыписной)',
            'ФИО врача', 'Количество койко-дней ф. 066у',
            'Количество\nкойко-дней\nпо статис-\nтическим\nсуткам', 'Дата проведения операции',
            'Время начала операции', 'Тип\nоперации\nплановая\n/экстрен-\nная', 'Код операции',
            'Наименова-ние операции', 'Наличие\nпредопера-\nционного\nэпикриза',
            'Наличие\nпротокола\nоперации', 'Осложне-\nния', 'ФИО хирурга', 'Количество\nопераций']
        df = pd.read_excel(self.filepath_xls)
        title_from_excel = df.loc[[20]].replace({np.nan: None}).values.tolist()[0][:10]
        title_from_excel_right = df.loc[[21]].replace({np.nan: None}).values.tolist()[0][10:]
        title_from_excel.extend(title_from_excel_right)
        assert title_from_excel == title, 'Заголовки в xls отличаются.'

    def test_title_xlsx(self):
        title = [
            '№ п/п', 'ФИО пациента', 'Дата рождения', 'Возраст, лет', 'Пол', 'Адрес проживания/ регистрации',
            'Тип адреса проживания (село/ город)', '№ КВС', 'Тип госпитализации (планово/ экстренно)',
            'Профильное отделение', 'Наименова-\nние\nотделения', 'Профиль коек',
            'Состояние\nпри поступ-\nлении в \nотделение', 'Дата поступле-ния', 'Время поступле-ния',
            'Код основного диагноза по МКБ 10', 'Наименова-ние\nосновного\nдиагноза',
            'Осложнения\nосновного\nдиагноза', 'Сопутствующие\nдиагнозы', 'Общие услуги',
            'Наличие осмотра в отделении', 'Количество\nдневнико-вых\nзаписей\nв отделении',
            'Исход\nгоспитали-зации', 'Дата\nвыписки\n/перевода\n/смерти', 'Время\nвыписки\n/перевода\n/смерти',
            'Эпикриз', 'ФИО врача', 'Количество койко-дней ф. 066у',
            'Количество\nкойко-дней\nпо статис-\nтическим\nсуткам',
            'Наименова-\nние \nреанима-\nционной \nслужбы', 'Профиль коек', 'Дневник поступле-ния',
            'Дата начала реанима-ционного периода', 'Время начала реанима-ционного периода',
            'Количество\nдневнико-\nвых запи-\nсей в \nкарте', 'Исход реанима-ции',
            'Дата окончания реанима-ционного периода', 'Время  окончания реанима-ционного периода',
            'Эпикриз\n(перевод-\nной либо\nвыписной)', 'ФИО врача', 'Количество койко-дней ф. 066у',
            'Количество\nкойко-дней\nпо статис-\nтическим\nсуткам', 'Дата проведения операции',
            'Время начала операции', 'Тип\nоперации\nплановая\n/экстрен-\nная', 'Код операции',
            'Наименова-ние операции', 'Наличие\nпредопера-\nционного\nэпикриза', 'Наличие\nпротокола\nоперации',
            'Осложне-\nния', 'ФИО хирурга', 'Количество\nопераций']
        df = pd.read_excel(self.filepath_xlsx)
        title_from_excel = df.loc[[20]].replace({np.nan: None}).values.tolist()[0][:10]
        title_from_excel_right = df.loc[[21]].replace({np.nan: None}).values.tolist()[0][10:]
        title_from_excel.extend(title_from_excel_right)
        assert title_from_excel == title, 'Заголовки в xlsx отличаются.'


class TestPhone:
    filepath_xls = r"tests/files/Список поступивших пациентов по дате и времени.xlsx"
    filepath_xlsx = r"tests/files/1696599142_han_evnps_timelist_new_pg.xlsx"
    
    def test_title_xls(self):
        title = [
            '№ \nп/п', 'Ф.И.О. пациента', 'Дата рождения', 'Возраст', 'Номер карты',
            'Дата \nи время \nгоспитали-\nзации', 'Кем доставлен', 'Кем направлен',
            'Тип гос- питали- зации', 'Диагноз приёмного отделения', 'Переведен из отделения МО',
            'Диагноз при переводе', 'Поряд- ковый номер дви- жения \nв КВС', 'Дата поступ- ления в отделение',
            'Время поступ\nления', 'Отделение', 'Ф.И.О. врача', 'Диагноз', 'Профиль коек ', '№ палаты',            
            'Серия и номер полиса', 'Страховая компания', 'Адрес проживания/ регистрации', 'Телефон', 'Документ, удостове- ряющий личность']
        df = pd.read_excel(self.filepath_xls)
        title_from_excel = df.loc[[18]].replace({np.nan: None}).values.tolist()[0]
        title_from_excel[6:20] = df.loc[[19]].replace({np.nan: None}).values.tolist()[0][6:20]
        assert title_from_excel == title, 'Заголовки в xls отличаются.'

    def test_title_xlsx(self):
        title = [
            '№ \nп/п', 'Ф.И.О. пациента', 'Дата рождения', 'Возраст', 'Номер карты',
            'Дата \nи время \nгоспитали-\nзации', 'Кем доставлен', 'Кем направлен',
            'Тип гос- питали- зации', 'Диагноз приёмного отделения', 'Переведен из отделения МО',
            'Диагноз при переводе', 'Поряд- ковый номер дви- жения \nв КВС', 'Дата поступ- ления в отделение',
            'Время поступ\nления', 'Отделение', 'Ф.И.О. врача', 'Диагноз', 'Профиль коек ', '№ палаты',            
            'Серия и номер полиса', 'Страховая компания', 'Адрес проживания/ регистрации', 'Телефон',
            'Документ, удостове- ряющий личность']
        df = pd.read_excel(self.filepath_xlsx)
        title_from_excel = df.loc[[18]].replace({np.nan: None}).values.tolist()[0]
        title_from_excel[6:20] = df.loc[[19]].replace({np.nan: None}).values.tolist()[0][6:20]
        assert title_from_excel == title, 'Заголовки в xlsx отличаются.'


class TestServices:
    filepath_xls = r"tests/files/Список пациентов, которым выданы направления на услуги.xlsx"
    filepath_xlsx = r"tests/files/1696599422_pan_SpisokDirection_Usluga_pg.xlsx"
    
    def test_title_xls(self):
        title_up = [
            'Отделение направления', 'Врач', 'Дата направления', '№ Направления', 'КОД Услуги',
            'Наименование услуги', 'Коли\nчество услуг', 'ФИО пациента', 'Дата рождения', 'СНИЛС',
            'Документ удостоверяющий личность', None, None, 'Полис', None, 'Дата выполнения услуги']
        title_down = [
            None, None, None, None, None, None, None, None, None, None, 'тип документа',
            'серия', 'номер', 'наименование СМО', 'серия/номер', None]
        df = pd.read_excel(self.filepath_xls)
        title_from_excel_up = df.loc[[3]].replace({np.nan: None}).values.tolist()[0]
        title_from_excel_down = df.loc[[4]].replace({np.nan: None}).values.tolist()[0]
        assert title_from_excel_up == title_up, 'Заголовки в xls отличаются.'
        assert title_from_excel_down == title_down, 'Заголовки в xls отличаются.'

    def test_title_xlsx(self):
        title_up = [
            'Отделение направления', 'Врач', 'Дата направления', '№ Направления', 'КОД Услуги',
            'Наименование услуги', 'Коли\nчество услуг', 'ФИО пациента', 'Дата рождения', 'СНИЛС',
            'Документ удостоверяющий личность', None, None, 'Полис', None, 'Дата выполнения услуги']
        title_down = [
            None, None, None, None, None, None, None, None, None, None, 'тип документа', 'серия',
            'номер', 'наименование СМО', 'серия/номер', None]
        df = pd.read_excel(self.filepath_xlsx)
        title_from_excel_up = df.loc[[2]].replace({np.nan: None}).values.tolist()[0]
        title_from_excel_down = df.loc[[3]].replace({np.nan: None}).values.tolist()[0]
        assert title_from_excel_up == title_up, 'Заголовки в xlsx отличаются.'
        assert title_from_excel_down == title_down, 'Заголовки в xlsx отличаются.'
